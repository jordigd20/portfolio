---
import '../styles/global.css';
import Analytics from '@vercel/analytics/astro';

export interface Props {
  title: string;
  description: string;
  url?: string;
}

const { title, description, url = 'https://jordigomez.dev' } = Astro.props;
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width" />

<!-- Primary Meta Tags -->
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook  -->
<meta property="og:type" content="website" />
<meta property="og:url" content={url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta
  property="og:image"
  content="https://res.cloudinary.com/demz9lbb3/image/upload/v1709832724/portfolio/rtghjo0oi0lcrjtrjboy.webp"
/>

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta
  property="twitter:image"
  content="https://res.cloudinary.com/demz9lbb3/image/upload/v1709832724/portfolio/rtghjo0oi0lcrjtrjboy.webp"
/>

<meta name="generator" content={Astro.generator} />

<title>{title}</title>
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

<Analytics />

<script is:inline>
  // This code is inlined in the head to make dark mode instant & blocking.
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
  };

  const isDark = getThemePreference() === 'dark';
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  if (typeof localStorage !== 'undefined') {
    // Watch the document element and persist user preference when it changes.
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
    });
    observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
  }
</script>
